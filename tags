!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CART_TYPE	main.c	/^int CART_TYPE = 0;$/;"	v
CC	Makefile	/^CC=cc$/;"	m
CDL_DELETE	ut/utlist.h	488;"	d
CDL_FOREACH	ut/utlist.h	499;"	d
CDL_FOREACH_SAFE	ut/utlist.h	502;"	d
CDL_PREPEND	ut/utlist.h	474;"	d
CDL_SEARCH	ut/utlist.h	514;"	d
CDL_SEARCH_SCALAR	ut/utlist.h	507;"	d
CDL_SORT	ut/utlist.h	216;"	d
CFLAGS	Makefile	/^CFLAGS=-g -Wall -Wfatal-errors -std=c99$/;"	m
Clock	z80.h	/^	struct Clock {$/;"	s	struct:__anon7
Clock	z80.h	/^	} Clock;$/;"	m	struct:__anon7	typeref:struct:__anon7::Clock
DECLTYPE	ut/uthash.h	37;"	d
DECLTYPE	ut/uthash.h	40;"	d
DECLTYPE	ut/uthash.h	43;"	d
DECLTYPE_ASSIGN	ut/uthash.h	47;"	d
DECLTYPE_ASSIGN	ut/uthash.h	53;"	d
DL_APPEND	ut/utlist.h	412;"	d
DL_CONCAT	ut/utlist.h	373;"	d
DL_CONCAT	ut/utlist.h	426;"	d
DL_DELETE	ut/utlist.h	441;"	d
DL_FOREACH	ut/utlist.h	460;"	d
DL_FOREACH_SAFE	ut/utlist.h	464;"	d
DL_PREPEND	ut/utlist.h	400;"	d
DL_SEARCH	ut/utlist.h	469;"	d
DL_SEARCH_SCALAR	ut/utlist.h	468;"	d
DL_SORT	ut/utlist.h	158;"	d
ELMT_FROM_HH	ut/uthash.h	82;"	d
HASH_ADD	ut/uthash.h	149;"	d
HASH_ADD_INT	ut/uthash.h	237;"	d
HASH_ADD_KEYPTR	ut/uthash.h	152;"	d
HASH_ADD_PTR	ut/uthash.h	241;"	d
HASH_ADD_STR	ut/uthash.h	233;"	d
HASH_ADD_TO_BKT	ut/uthash.h	582;"	d
HASH_BER	ut/uthash.h	328;"	d
HASH_BKT_CAPACITY_THRESH	ut/uthash.h	79;"	d
HASH_BLOOM_ADD	ut/uthash.h	117;"	d
HASH_BLOOM_ADD	ut/uthash.h	126;"	d
HASH_BLOOM_BITLEN	ut/uthash.h	98;"	d
HASH_BLOOM_BITSET	ut/uthash.h	114;"	d
HASH_BLOOM_BITTEST	ut/uthash.h	115;"	d
HASH_BLOOM_BYTELEN	ut/uthash.h	99;"	d
HASH_BLOOM_FREE	ut/uthash.h	109;"	d
HASH_BLOOM_FREE	ut/uthash.h	125;"	d
HASH_BLOOM_MAKE	ut/uthash.h	100;"	d
HASH_BLOOM_MAKE	ut/uthash.h	124;"	d
HASH_BLOOM_SIGNATURE	ut/uthash.h	859;"	d
HASH_BLOOM_TEST	ut/uthash.h	120;"	d
HASH_BLOOM_TEST	ut/uthash.h	127;"	d
HASH_CLEAR	ut/uthash.h	812;"	d
HASH_CNT	ut/uthash.h	835;"	d
HASH_COUNT	ut/uthash.h	834;"	d
HASH_DEL	ut/uthash.h	243;"	d
HASH_DELETE	ut/uthash.h	194;"	d
HASH_DEL_IN_BKT	ut/uthash.h	596;"	d
HASH_EMIT_KEY	ut/uthash.h	310;"	d
HASH_EMIT_KEY	ut/uthash.h	317;"	d
HASH_EXPAND_BUCKETS	ut/uthash.h	637;"	d
HASH_FCN	ut/uthash.h	322;"	d
HASH_FCN	ut/uthash.h	324;"	d
HASH_FIND	ut/uthash.h	84;"	d
HASH_FIND_INT	ut/uthash.h	235;"	d
HASH_FIND_IN_BKT	ut/uthash.h	568;"	d
HASH_FIND_PTR	ut/uthash.h	239;"	d
HASH_FIND_STR	ut/uthash.h	231;"	d
HASH_FNV	ut/uthash.h	350;"	d
HASH_FSCK	ut/uthash.h	251;"	d
HASH_FSCK	ut/uthash.h	303;"	d
HASH_INITIAL_NUM_BUCKETS	ut/uthash.h	77;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	ut/uthash.h	78;"	d
HASH_ITER	ut/uthash.h	824;"	d
HASH_ITER	ut/uthash.h	828;"	d
HASH_JEN	ut/uthash.h	389;"	d
HASH_JEN_MIX	ut/uthash.h	376;"	d
HASH_KEYCMP	ut/uthash.h	565;"	d
HASH_MAKE_TABLE	ut/uthash.h	130;"	d
HASH_MUR	ut/uthash.h	527;"	d
HASH_OAT	ut/uthash.h	360;"	d
HASH_OOPS	ut/uthash.h	250;"	d
HASH_SAX	ut/uthash.h	340;"	d
HASH_SELECT	ut/uthash.h	774;"	d
HASH_SFH	ut/uthash.h	441;"	d
HASH_SIGNATURE	ut/uthash.h	858;"	d
HASH_SORT	ut/uthash.h	689;"	d
HASH_SRT	ut/uthash.h	690;"	d
HASH_TO_BKT	ut/uthash.h	177;"	d
IN_BIOS	main.c	/^int IN_BIOS = 1;$/;"	v
LDECLTYPE	ut/utlist.h	68;"	d
LDECLTYPE	ut/utlist.h	71;"	d
LDECLTYPE	ut/utlist.h	74;"	d
LL_APPEND	ut/utlist.h	307;"	d
LL_APPEND	ut/utlist.h	368;"	d
LL_APPEND	ut/utlist.h	369;"	d
LL_APPEND_VS2008	ut/utlist.h	337;"	d
LL_CONCAT	ut/utlist.h	295;"	d
LL_CONCAT	ut/utlist.h	372;"	d
LL_DELETE	ut/utlist.h	320;"	d
LL_DELETE	ut/utlist.h	370;"	d
LL_DELETE	ut/utlist.h	371;"	d
LL_DELETE_VS2008	ut/utlist.h	349;"	d
LL_FOREACH	ut/utlist.h	377;"	d
LL_FOREACH_SAFE	ut/utlist.h	380;"	d
LL_PREPEND	ut/utlist.h	289;"	d
LL_SEARCH	ut/utlist.h	390;"	d
LL_SEARCH_SCALAR	ut/utlist.h	383;"	d
LL_SORT	ut/utlist.h	102;"	d
MUR_FMIX	ut/uthash.h	518;"	d
MUR_GETBLOCK	ut/uthash.h	496;"	d
MUR_GETBLOCK	ut/uthash.h	512;"	d
MUR_ONE_THREE	ut/uthash.h	506;"	d
MUR_ONE_THREE	ut/uthash.h	510;"	d
MUR_PLUS0_ALIGNED	ut/uthash.h	498;"	d
MUR_PLUS1_ALIGNED	ut/uthash.h	499;"	d
MUR_PLUS2_ALIGNED	ut/uthash.h	500;"	d
MUR_PLUS3_ALIGNED	ut/uthash.h	501;"	d
MUR_ROTL32	ut/uthash.h	517;"	d
MUR_THREE_ONE	ut/uthash.h	504;"	d
MUR_THREE_ONE	ut/uthash.h	508;"	d
MUR_TWO_TWO	ut/uthash.h	505;"	d
MUR_TWO_TWO	ut/uthash.h	509;"	d
NO_DECLTYPE	ut/uthash.h	39;"	d
NO_DECLTYPE	ut/utlist.h	70;"	d
OBJECTS	Makefile	/^OBJECTS=z80.o memory.o mmu.o gpu.o main.o$/;"	m
OpCodeType	main.h	/^typedef void (*OpCodeType)(z80_t*);$/;"	t
RAM_OFFS	main.c	/^uint16_t RAM_OFFS = 0;$/;"	v
ROM_OFFS	main.c	/^uint16_t ROM_OFFS = 0x4000;$/;"	v
Reg	z80.h	/^	struct Reg {$/;"	s	struct:__anon7
Reg	z80.h	/^	} Reg;$/;"	m	struct:__anon7	typeref:struct:__anon7::Reg
Rsv	z80.h	/^	struct Rsv {$/;"	s	struct:__anon7
Rsv	z80.h	/^	} Rsv;$/;"	m	struct:__anon7	typeref:struct:__anon7::Rsv
UTARRAY_H	ut/utarray.h	28;"	d
UTARRAY_VERSION	ut/utarray.h	30;"	d
UTHASH_H	ut/uthash.h	25;"	d
UTHASH_VERSION	ut/uthash.h	67;"	d
UTLIST_H	ut/utlist.h	25;"	d
UTLIST_VERSION	ut/utlist.h	27;"	d
UTSTRING_H	ut/utstring.h	28;"	d
UTSTRING_VERSION	ut/utstring.h	30;"	d
UT_array	ut/utarray.h	/^} UT_array;$/;"	t	typeref:struct:__anon5
UT_hash_bucket	ut/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	ut/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	ut/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	ut/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	ut/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	ut/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UT_icd	ut/utarray.h	/^} UT_icd;$/;"	t	typeref:struct:__anon4
UT_string	ut/utstring.h	/^} UT_string;$/;"	t	typeref:struct:__anon6
WP	ut/uthash.h	502;"	d
_CASTASGN	ut/utlist.h	87;"	d
_CASTASGN	ut/utlist.h	95;"	d
_GPU_H	gpu.h	3;"	d
_NEXT	ut/utlist.h	82;"	d
_NEXT	ut/utlist.h	90;"	d
_NEXTASGN	ut/utlist.h	83;"	d
_NEXTASGN	ut/utlist.h	91;"	d
_PREV	ut/utlist.h	84;"	d
_PREV	ut/utlist.h	92;"	d
_PREVASGN	ut/utlist.h	85;"	d
_PREVASGN	ut/utlist.h	93;"	d
_RS	ut/utlist.h	86;"	d
_RS	ut/utlist.h	94;"	d
_SV	ut/utlist.h	81;"	d
_SV	ut/utlist.h	89;"	d
_UNUSED_	ut/utarray.h	/^static const UT_icd ut_int_icd _UNUSED_ = {sizeof(int),NULL,NULL,NULL};$/;"	v
_UNUSED_	ut/utarray.h	/^static const UT_icd ut_ptr_icd _UNUSED_ = {sizeof(void*),NULL,NULL,NULL};$/;"	v
_UNUSED_	ut/utarray.h	/^static const UT_icd ut_str_icd _UNUSED_ = {sizeof(char*),NULL,utarray_str_cpy,utarray_str_dtor};$/;"	v
_UNUSED_	ut/utarray.h	33;"	d
_UNUSED_	ut/utarray.h	35;"	d
_UNUSED_	ut/utstring.h	33;"	d
_UNUSED_	ut/utstring.h	35;"	d
__dbg_h_	dbg.h	2;"	d
_main_h	main.h	3;"	d
_memory_h	memory.h	2;"	d
_mmu_h	mmu.h	3;"	d
_utarray_eltptr	ut/utarray.h	116;"	d
_z80_h	z80.h	3;"	d
a	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
a	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
add_memory_bios	memory.c	/^void add_memory_bios(int addr, uint8_t value)$/;"	f
add_memory_eram	memory.c	/^void add_memory_eram(int addr, uint8_t value)$/;"	f
add_memory_rom	memory.c	/^void add_memory_rom(int addr, uint8_t value)$/;"	f
add_memory_vram	memory.c	/^void add_memory_vram(int addr, uint8_t value)$/;"	f
add_memory_wram	memory.c	/^void add_memory_wram(int addr, uint8_t value)$/;"	f
add_memory_zram	memory.c	/^void add_memory_zram(int addr, uint8_t value)$/;"	f
addr	memory.h	/^	int addr;$/;"	m	struct:__anon2
addr	memory.h	/^	int addr;$/;"	m	struct:__anon3
b	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
b	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
bios	main.c	/^gb_mem8_t	*bios 	= NULL;$/;"	v
bloom_bv	ut/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	ut/uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	ut/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
buckets	ut/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
c	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
c	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
cb	z80.c	/^void cb(z80_t* state) $/;"	f
cbopcodes	z80.c	/^void *cbopcodes[256] = {$/;"	v
check	dbg.h	22;"	d
check_debug	dbg.h	28;"	d
check_mem	dbg.h	26;"	d
clean_errno	dbg.h	14;"	d
clear_memory_16	main.c	/^void clear_memory_16(gb_mem16_t* memory)$/;"	f
clear_memory_8	main.c	/^void clear_memory_8(gb_mem8_t* memory)$/;"	f
copy	ut/utarray.h	/^    ctor_f *copy;$/;"	m	struct:__anon4
count	ut/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
ctor_f	ut/utarray.h	/^typedef void (ctor_f)(void *dst, const void *src);$/;"	t
d	ut/utarray.h	/^    char *d;     \/* n slots of size icd->sz*\/$/;"	m	struct:__anon5
d	ut/utstring.h	/^    char *d;$/;"	m	struct:__anon6
d	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
d	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
debug	dbg.h	11;"	d
debug	dbg.h	9;"	d
dtor	ut/utarray.h	/^    dtor_f *dtor;$/;"	m	struct:__anon4
dtor_f	ut/utarray.h	/^typedef void (dtor_f)(void *elt);$/;"	t
e	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
e	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
eram	main.c	/^gb_mem8_t	*eram	= NULL;$/;"	v
expand_mult	ut/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
f	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
f	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
fileBuffer	main.c	/^uint8_t		*fileBuffer;$/;"	v
gb_mem16_t	memory.h	/^} gb_mem16_t;$/;"	t	typeref:struct:__anon3
gb_mem8_t	memory.h	/^} gb_mem8_t;$/;"	t	typeref:struct:__anon2
get16bits	ut/uthash.h	431;"	d
get16bits	ut/uthash.h	434;"	d
get16bits	ut/uthash.h	438;"	d
getState	main.c	/^z80_t *getState()$/;"	f
h	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
h	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
halt	z80.h	/^	int halt;$/;"	m	struct:__anon7
hashv	ut/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
hh	memory.h	/^	UT_hash_handle hh;	\/\/ Make hashable$/;"	m	struct:__anon2
hh	memory.h	/^	UT_hash_handle hh;	\/\/ make hashable$/;"	m	struct:__anon3
hh_head	ut/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_next	ut/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	ut/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hho	ut/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
i	ut/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anon5
i	ut/utstring.h	/^    size_t i; \/* index of first unused byte *\/$/;"	m	struct:__anon6
icd	ut/utarray.h	/^    UT_icd icd;  \/* initializer, copy and destructor functions *\/$/;"	m	struct:__anon5
ideal_chain_maxlen	ut/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
ime	z80.h	/^		int ime;$/;"	m	struct:__anon7::Reg
ineff_expands	ut/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
init	ut/utarray.h	/^    init_f *init;$/;"	m	struct:__anon4
init_f	ut/utarray.h	/^typedef void (init_f)(void *elt);$/;"	t
init_state	z80.c	/^void init_state(z80_t* state)$/;"	f
key	ut/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
keylen	ut/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
l	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Reg
l	z80.h	/^		uint8_t a, b, c, d, e, h, l, f;$/;"	m	struct:__anon7::Rsv
line	gpu.c	/^int line = 0;$/;"	v
load_bios	main.c	/^void load_bios()$/;"	f
load_file	main.c	/^long load_file(char *filename)$/;"	f
log2_num_buckets	ut/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
log_err	dbg.h	16;"	d
log_info	dbg.h	20;"	d
log_warn	dbg.h	18;"	d
m	z80.h	/^		int m, t;$/;"	m	struct:__anon7::Reg
m	z80.h	/^		int m;$/;"	m	struct:__anon7::Clock
main	main.c	/^int main(int argc, char *argv[])$/;"	f
mbc	main.c	/^mbc_t		*mbc;$/;"	v
mbc_t	memory.h	/^} mbc_t;$/;"	t	typeref:struct:__anon1
mode	gpu.c	/^int mode = 0;$/;"	v
mode	memory.h	/^	int mode;$/;"	m	struct:__anon1
modeClock	gpu.c	/^int modeClock = 0;$/;"	v
n	ut/utarray.h	/^    unsigned i,n;\/* i: index of next available slot, n: num slots *\/$/;"	m	struct:__anon5
n	ut/utstring.h	/^    size_t n; \/* allocd size *\/$/;"	m	struct:__anon6
next	ut/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
noexpand	ut/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonideal_items	ut/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
num_buckets	ut/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	ut/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
oom	ut/utarray.h	42;"	d
oom	ut/utstring.h	41;"	d
op_adc_a	z80.c	/^void op_adc_a(z80_t* state)$/;"	f
op_adc_b	z80.c	/^void op_adc_b(z80_t* state)$/;"	f
op_adc_c	z80.c	/^void op_adc_c(z80_t* state)$/;"	f
op_adc_d	z80.c	/^void op_adc_d(z80_t* state)$/;"	f
op_adc_e	z80.c	/^void op_adc_e(z80_t* state)$/;"	f
op_adc_h	z80.c	/^void op_adc_h(z80_t* state)$/;"	f
op_adc_hl	z80.c	/^void op_adc_hl(z80_t* state)$/;"	f
op_adc_l	z80.c	/^void op_adc_l(z80_t* state)$/;"	f
op_adc_nn	z80.c	/^void op_adc_nn(z80_t* state)$/;"	f
op_add_a_a	z80.c	/^void op_add_a_a(z80_t* state)$/;"	f
op_add_a_b	z80.c	/^void op_add_a_b(z80_t* state)$/;"	f
op_add_a_c	z80.c	/^void op_add_a_c(z80_t* state)$/;"	f
op_add_a_d	z80.c	/^void op_add_a_d(z80_t* state)$/;"	f
op_add_a_e	z80.c	/^void op_add_a_e(z80_t* state)$/;"	f
op_add_a_h	z80.c	/^void op_add_a_h(z80_t* state)$/;"	f
op_add_a_hl	z80.c	/^void op_add_a_hl(z80_t* state)$/;"	f
op_add_a_l	z80.c	/^void op_add_a_l(z80_t* state)$/;"	f
op_add_a_nn	z80.c	/^void op_add_a_nn(z80_t* state)$/;"	f
op_add_hl_bc	z80.c	/^void op_add_hl_bc(z80_t* state)$/;"	f
op_add_hl_de	z80.c	/^void op_add_hl_de(z80_t* state)$/;"	f
op_add_hl_hl	z80.c	/^void op_add_hl_hl(z80_t* state)$/;"	f
op_add_hl_sp	z80.c	/^void op_add_hl_sp(z80_t* state)$/;"	f
op_add_sp_nn	z80.c	/^void op_add_sp_nn(z80_t* state)$/;"	f
op_and_a	z80.c	/^void op_and_a(z80_t* state)$/;"	f
op_and_b	z80.c	/^void op_and_b(z80_t* state)$/;"	f
op_and_c	z80.c	/^void op_and_c(z80_t* state)$/;"	f
op_and_d	z80.c	/^void op_and_d(z80_t* state)$/;"	f
op_and_e	z80.c	/^void op_and_e(z80_t* state)$/;"	f
op_and_h	z80.c	/^void op_and_h(z80_t* state)$/;"	f
op_and_hl	z80.c	/^void op_and_hl(z80_t* state)$/;"	f
op_and_l	z80.c	/^void op_and_l(z80_t* state)$/;"	f
op_and_nn	z80.c	/^void op_and_nn(z80_t* state)$/;"	f
op_call	z80.c	/^void op_call(z80_t* state)$/;"	f
op_call_c	z80.c	/^void op_call_c(z80_t* state)$/;"	f
op_call_nc	z80.c	/^void op_call_nc(z80_t* state)$/;"	f
op_call_nz	z80.c	/^void op_call_nz(z80_t* state)$/;"	f
op_call_z	z80.c	/^void op_call_z(z80_t* state)$/;"	f
op_ccf	z80.c	/^void op_ccf(z80_t* state)$/;"	f
op_cp_a	z80.c	/^void op_cp_a(z80_t* state)$/;"	f
op_cp_b	z80.c	/^void op_cp_b(z80_t* state)$/;"	f
op_cp_c	z80.c	/^void op_cp_c(z80_t* state)$/;"	f
op_cp_d	z80.c	/^void op_cp_d(z80_t* state)$/;"	f
op_cp_e	z80.c	/^void op_cp_e(z80_t* state)$/;"	f
op_cp_h	z80.c	/^void op_cp_h(z80_t* state)$/;"	f
op_cp_hl	z80.c	/^void op_cp_hl(z80_t* state)$/;"	f
op_cp_l	z80.c	/^void op_cp_l(z80_t* state)$/;"	f
op_cp_nn	z80.c	/^void op_cp_nn(z80_t* state)$/;"	f
op_cpl	z80.c	/^void op_cpl(z80_t* state)$/;"	f
op_daa	z80.c	/^void op_daa(z80_t* state)$/;"	f
op_dec_a	z80.c	/^void op_dec_a(z80_t* state)$/;"	f
op_dec_b	z80.c	/^void op_dec_b(z80_t* state)$/;"	f
op_dec_bc	z80.c	/^void op_dec_bc(z80_t* state)$/;"	f
op_dec_c	z80.c	/^void op_dec_c(z80_t* state)$/;"	f
op_dec_d	z80.c	/^void op_dec_d(z80_t* state)$/;"	f
op_dec_de	z80.c	/^void op_dec_de(z80_t* state)$/;"	f
op_dec_e	z80.c	/^void op_dec_e(z80_t* state)$/;"	f
op_dec_h	z80.c	/^void op_dec_h(z80_t* state)$/;"	f
op_dec_hl	z80.c	/^void op_dec_hl(z80_t* state)$/;"	f
op_dec_hl_	z80.c	/^void op_dec_hl_(z80_t* state)$/;"	f
op_dec_l	z80.c	/^void op_dec_l(z80_t* state)$/;"	f
op_dec_sp	z80.c	/^void op_dec_sp(z80_t* state)$/;"	f
op_di	z80.c	/^void op_di(z80_t* state)$/;"	f
op_ei	z80.c	/^void op_ei(z80_t* state)$/;"	f
op_halt	z80.c	/^void op_halt(z80_t* state)$/;"	f
op_hl_ld_sp_nn	z80.c	/^void op_hl_ld_sp_nn(z80_t* state)$/;"	f
op_inc_a	z80.c	/^void op_inc_a(z80_t* state)$/;"	f
op_inc_b	z80.c	/^void op_inc_b(z80_t* state)$/;"	f
op_inc_bc	z80.c	/^void op_inc_bc(z80_t* state)$/;"	f
op_inc_c	z80.c	/^void op_inc_c(z80_t* state)$/;"	f
op_inc_d	z80.c	/^void op_inc_d(z80_t* state)$/;"	f
op_inc_de	z80.c	/^void op_inc_de(z80_t* state)$/;"	f
op_inc_e	z80.c	/^void op_inc_e(z80_t* state)$/;"	f
op_inc_h	z80.c	/^void op_inc_h(z80_t* state)$/;"	f
op_inc_hl	z80.c	/^void op_inc_hl(z80_t* state)$/;"	f
op_inc_hl_	z80.c	/^void op_inc_hl_(z80_t* state)$/;"	f
op_inc_l	z80.c	/^void op_inc_l(z80_t* state)$/;"	f
op_inc_sp	z80.c	/^void op_inc_sp(z80_t* state)$/;"	f
op_jp	z80.c	/^void op_jp(z80_t* state)$/;"	f
op_jp_c	z80.c	/^void op_jp_c(z80_t* state)$/;"	f
op_jp_hl	z80.c	/^void op_jp_hl(z80_t* state)$/;"	f
op_jp_nc	z80.c	/^void op_jp_nc(z80_t* state)$/;"	f
op_jp_nz	z80.c	/^void op_jp_nz(z80_t* state)$/;"	f
op_jp_z	z80.c	/^void op_jp_z(z80_t* state)$/;"	f
op_jr	z80.c	/^void op_jr(z80_t* state)$/;"	f
op_jr_c	z80.c	/^void op_jr_c(z80_t* state)$/;"	f
op_jr_nc	z80.c	/^void op_jr_nc(z80_t* state)$/;"	f
op_jr_nz	z80.c	/^void op_jr_nz(z80_t* state)$/;"	f
op_jr_z	z80.c	/^void op_jr_z(z80_t* state)$/;"	f
op_ld_a_a	z80.c	/^void op_ld_a_a(z80_t* state)$/;"	f
op_ld_a_b	z80.c	/^void op_ld_a_b(z80_t* state)$/;"	f
op_ld_a_bc	z80.c	/^void op_ld_a_bc(z80_t* state)$/;"	f
op_ld_a_c	z80.c	/^void op_ld_a_c(z80_t* state)$/;"	f
op_ld_a_d	z80.c	/^void op_ld_a_d(z80_t* state)$/;"	f
op_ld_a_de	z80.c	/^void op_ld_a_de(z80_t* state)$/;"	f
op_ld_a_e	z80.c	/^void op_ld_a_e(z80_t* state)$/;"	f
op_ld_a_ffc	z80.c	/^void op_ld_a_ffc(z80_t* state)$/;"	f
op_ld_a_ffnn	z80.c	/^void op_ld_a_ffnn(z80_t* state)$/;"	f
op_ld_a_h	z80.c	/^void op_ld_a_h(z80_t* state)$/;"	f
op_ld_a_hl	z80.c	/^void op_ld_a_hl(z80_t* state)$/;"	f
op_ld_a_l	z80.c	/^void op_ld_a_l(z80_t* state)$/;"	f
op_ld_a_nn	z80.c	/^void op_ld_a_nn(z80_t* state)$/;"	f
op_ld_a_nnnn	z80.c	/^void op_ld_a_nnnn(z80_t* state)$/;"	f
op_ld_b_a	z80.c	/^void op_ld_b_a(z80_t* state)$/;"	f
op_ld_b_b	z80.c	/^void op_ld_b_b(z80_t* state)$/;"	f
op_ld_b_c	z80.c	/^void op_ld_b_c(z80_t* state)$/;"	f
op_ld_b_d	z80.c	/^void op_ld_b_d(z80_t* state)$/;"	f
op_ld_b_e	z80.c	/^void op_ld_b_e(z80_t* state)$/;"	f
op_ld_b_h	z80.c	/^void op_ld_b_h(z80_t* state)$/;"	f
op_ld_b_hl	z80.c	/^void op_ld_b_hl(z80_t* state)$/;"	f
op_ld_b_l	z80.c	/^void op_ld_b_l(z80_t* state)$/;"	f
op_ld_b_nn	z80.c	/^void op_ld_b_nn(z80_t* state)$/;"	f
op_ld_bc_a	z80.c	/^void op_ld_bc_a(z80_t* state)$/;"	f
op_ld_bc_nn	z80.c	/^void op_ld_bc_nn(z80_t* state)$/;"	f
op_ld_c_a	z80.c	/^void op_ld_c_a(z80_t* state)$/;"	f
op_ld_c_b	z80.c	/^void op_ld_c_b(z80_t* state)$/;"	f
op_ld_c_c	z80.c	/^void op_ld_c_c(z80_t* state)$/;"	f
op_ld_c_d	z80.c	/^void op_ld_c_d(z80_t* state)$/;"	f
op_ld_c_e	z80.c	/^void op_ld_c_e(z80_t* state)$/;"	f
op_ld_c_h	z80.c	/^void op_ld_c_h(z80_t* state)$/;"	f
op_ld_c_hl	z80.c	/^void op_ld_c_hl(z80_t* state)$/;"	f
op_ld_c_l	z80.c	/^void op_ld_c_l(z80_t* state)$/;"	f
op_ld_c_nn	z80.c	/^void op_ld_c_nn(z80_t* state)$/;"	f
op_ld_d_a	z80.c	/^void op_ld_d_a(z80_t* state)$/;"	f
op_ld_d_b	z80.c	/^void op_ld_d_b(z80_t* state)$/;"	f
op_ld_d_c	z80.c	/^void op_ld_d_c(z80_t* state)$/;"	f
op_ld_d_d	z80.c	/^void op_ld_d_d(z80_t* state)$/;"	f
op_ld_d_e	z80.c	/^void op_ld_d_e(z80_t* state)$/;"	f
op_ld_d_h	z80.c	/^void op_ld_d_h(z80_t* state)$/;"	f
op_ld_d_hl	z80.c	/^void op_ld_d_hl(z80_t* state)$/;"	f
op_ld_d_l	z80.c	/^void op_ld_d_l(z80_t* state)$/;"	f
op_ld_d_nn	z80.c	/^void op_ld_d_nn(z80_t* state)$/;"	f
op_ld_de_a	z80.c	/^void op_ld_de_a(z80_t* state)$/;"	f
op_ld_de_nn	z80.c	/^void op_ld_de_nn(z80_t* state)$/;"	f
op_ld_e_a	z80.c	/^void op_ld_e_a(z80_t* state)$/;"	f
op_ld_e_b	z80.c	/^void op_ld_e_b(z80_t* state)$/;"	f
op_ld_e_c	z80.c	/^void op_ld_e_c(z80_t* state)$/;"	f
op_ld_e_d	z80.c	/^void op_ld_e_d(z80_t* state)$/;"	f
op_ld_e_e	z80.c	/^void op_ld_e_e(z80_t* state)$/;"	f
op_ld_e_h	z80.c	/^void op_ld_e_h(z80_t* state)$/;"	f
op_ld_e_hl	z80.c	/^void op_ld_e_hl(z80_t* state)$/;"	f
op_ld_e_l	z80.c	/^void op_ld_e_l(z80_t* state)$/;"	f
op_ld_e_nn	z80.c	/^void op_ld_e_nn(z80_t* state)$/;"	f
op_ld_ffc_a	z80.c	/^void op_ld_ffc_a(z80_t* state)$/;"	f
op_ld_ffnn_a	z80.c	/^void op_ld_ffnn_a(z80_t* state)$/;"	f
op_ld_h_a	z80.c	/^void op_ld_h_a(z80_t* state)$/;"	f
op_ld_h_b	z80.c	/^void op_ld_h_b(z80_t* state)$/;"	f
op_ld_h_c	z80.c	/^void op_ld_h_c(z80_t* state)$/;"	f
op_ld_h_d	z80.c	/^void op_ld_h_d(z80_t* state)$/;"	f
op_ld_h_e	z80.c	/^void op_ld_h_e(z80_t* state)$/;"	f
op_ld_h_h	z80.c	/^void op_ld_h_h(z80_t* state)$/;"	f
op_ld_h_hl	z80.c	/^void op_ld_h_hl(z80_t* state)$/;"	f
op_ld_h_l	z80.c	/^void op_ld_h_l(z80_t* state)$/;"	f
op_ld_h_nn	z80.c	/^void op_ld_h_nn(z80_t* state)$/;"	f
op_ld_hl_a	z80.c	/^void op_ld_hl_a(z80_t* state)$/;"	f
op_ld_hl_b	z80.c	/^void op_ld_hl_b(z80_t* state)$/;"	f
op_ld_hl_c	z80.c	/^void op_ld_hl_c(z80_t* state)$/;"	f
op_ld_hl_d	z80.c	/^void op_ld_hl_d(z80_t* state)$/;"	f
op_ld_hl_e	z80.c	/^void op_ld_hl_e(z80_t* state)$/;"	f
op_ld_hl_h	z80.c	/^void op_ld_hl_h(z80_t* state)$/;"	f
op_ld_hl_l	z80.c	/^void op_ld_hl_l(z80_t* state)$/;"	f
op_ld_hl_nn	z80.c	/^void op_ld_hl_nn(z80_t* state)$/;"	f
op_ld_hl_nnnn	z80.c	/^void op_ld_hl_nnnn(z80_t* state)$/;"	f
op_ld_l_a	z80.c	/^void op_ld_l_a(z80_t* state)$/;"	f
op_ld_l_b	z80.c	/^void op_ld_l_b(z80_t* state)$/;"	f
op_ld_l_c	z80.c	/^void op_ld_l_c(z80_t* state)$/;"	f
op_ld_l_d	z80.c	/^void op_ld_l_d(z80_t* state)$/;"	f
op_ld_l_e	z80.c	/^void op_ld_l_e(z80_t* state)$/;"	f
op_ld_l_h	z80.c	/^void op_ld_l_h(z80_t* state)$/;"	f
op_ld_l_hl	z80.c	/^void op_ld_l_hl(z80_t* state)$/;"	f
op_ld_l_l	z80.c	/^void op_ld_l_l(z80_t* state)$/;"	f
op_ld_l_nn	z80.c	/^void op_ld_l_nn(z80_t* state)$/;"	f
op_ld_nn_sp	z80.c	/^void op_ld_nn_sp(z80_t* state)$/;"	f
op_ld_nnnn_a	z80.c	/^void op_ld_nnnn_a(z80_t* state)$/;"	f
op_ld_sp_nn	z80.c	/^void op_ld_sp_nn(z80_t* state)$/;"	f
op_ldd_a_hl	z80.c	/^void op_ldd_a_hl(z80_t* state)$/;"	f
op_ldd_hl_a	z80.c	/^void op_ldd_hl_a(z80_t* state)$/;"	f
op_ldi_a_hl	z80.c	/^void op_ldi_a_hl(z80_t* state)$/;"	f
op_ldi_hl_a	z80.c	/^void op_ldi_hl_a(z80_t* state)$/;"	f
op_nop	z80.c	/^void op_nop(z80_t* state)$/;"	f
op_or_a	z80.c	/^void op_or_a(z80_t* state)$/;"	f
op_or_b	z80.c	/^void op_or_b(z80_t* state)$/;"	f
op_or_c	z80.c	/^void op_or_c(z80_t* state)$/;"	f
op_or_d	z80.c	/^void op_or_d(z80_t* state)$/;"	f
op_or_e	z80.c	/^void op_or_e(z80_t* state)$/;"	f
op_or_h	z80.c	/^void op_or_h(z80_t* state)$/;"	f
op_or_hl	z80.c	/^void op_or_hl(z80_t* state)$/;"	f
op_or_l	z80.c	/^void op_or_l(z80_t* state)$/;"	f
op_or_nn	z80.c	/^void op_or_nn(z80_t* state)$/;"	f
op_pop_af	z80.c	/^void op_pop_af(z80_t* state)$/;"	f
op_pop_bc	z80.c	/^void op_pop_bc(z80_t* state)$/;"	f
op_pop_de	z80.c	/^void op_pop_de(z80_t* state)$/;"	f
op_pop_hl	z80.c	/^void op_pop_hl(z80_t* state)$/;"	f
op_push_af	z80.c	/^void op_push_af(z80_t* state)$/;"	f
op_push_bc	z80.c	/^void op_push_bc(z80_t* state)$/;"	f
op_push_de	z80.c	/^void op_push_de(z80_t* state)$/;"	f
op_push_hl	z80.c	/^void op_push_hl(z80_t* state)$/;"	f
op_ret	z80.c	/^void op_ret(z80_t* state)$/;"	f
op_ret_c	z80.c	/^void op_ret_c(z80_t* state)$/;"	f
op_ret_nc	z80.c	/^void op_ret_nc(z80_t* state)$/;"	f
op_ret_nz	z80.c	/^void op_ret_nz(z80_t* state)$/;"	f
op_ret_z	z80.c	/^void op_ret_z(z80_t* state)$/;"	f
op_reti	z80.c	/^void op_reti(z80_t* state)$/;"	f
op_rl_a	z80.c	/^void op_rl_a(z80_t* state)$/;"	f
op_rlc_a	z80.c	/^void op_rlc_a(z80_t* state)$/;"	f
op_rlc_b	z80.c	/^void op_rlc_b(z80_t* state)$/;"	f
op_rlc_c	z80.c	/^void op_rlc_c(z80_t* state)$/;"	f
op_rlc_d	z80.c	/^void op_rlc_d(z80_t* state)$/;"	f
op_rlc_e	z80.c	/^void op_rlc_e(z80_t* state)$/;"	f
op_rlc_h	z80.c	/^void op_rlc_h(z80_t* state)$/;"	f
op_rlc_hl	z80.c	/^void op_rlc_hl(z80_t* state)$/;"	f
op_rlc_l	z80.c	/^void op_rlc_l(z80_t* state)$/;"	f
op_rr_a	z80.c	/^void op_rr_a(z80_t* state)$/;"	f
op_rrc_a	z80.c	/^void op_rrc_a(z80_t* state)$/;"	f
op_rst_0	z80.c	/^void op_rst_0(z80_t* state)$/;"	f
op_rst_10	z80.c	/^void op_rst_10(z80_t* state)$/;"	f
op_rst_18	z80.c	/^void op_rst_18(z80_t* state)$/;"	f
op_rst_20	z80.c	/^void op_rst_20(z80_t* state)$/;"	f
op_rst_28	z80.c	/^void op_rst_28(z80_t* state)$/;"	f
op_rst_30	z80.c	/^void op_rst_30(z80_t* state)$/;"	f
op_rst_38	z80.c	/^void op_rst_38(z80_t* state)$/;"	f
op_rst_8	z80.c	/^void op_rst_8(z80_t* state)$/;"	f
op_sbc_a	z80.c	/^void op_sbc_a(z80_t* state)$/;"	f
op_sbc_a_nn	z80.c	/^void op_sbc_a_nn(z80_t* state)$/;"	f
op_sbc_b	z80.c	/^void op_sbc_b(z80_t* state)$/;"	f
op_sbc_c	z80.c	/^void op_sbc_c(z80_t* state)$/;"	f
op_sbc_d	z80.c	/^void op_sbc_d(z80_t* state)$/;"	f
op_sbc_e	z80.c	/^void op_sbc_e(z80_t* state)$/;"	f
op_sbc_h	z80.c	/^void op_sbc_h(z80_t* state)$/;"	f
op_sbc_hl	z80.c	/^void op_sbc_hl(z80_t* state)$/;"	f
op_sbc_l	z80.c	/^void op_sbc_l(z80_t* state)$/;"	f
op_scf	z80.c	/^void op_scf(z80_t* state)$/;"	f
op_stop	z80.c	/^void op_stop(z80_t* state)$/;"	f
op_sub_a	z80.c	/^void op_sub_a(z80_t* state)$/;"	f
op_sub_b	z80.c	/^void op_sub_b(z80_t* state)$/;"	f
op_sub_c	z80.c	/^void op_sub_c(z80_t* state)$/;"	f
op_sub_d	z80.c	/^void op_sub_d(z80_t* state)$/;"	f
op_sub_e	z80.c	/^void op_sub_e(z80_t* state)$/;"	f
op_sub_h	z80.c	/^void op_sub_h(z80_t* state)$/;"	f
op_sub_hl	z80.c	/^void op_sub_hl(z80_t* state)$/;"	f
op_sub_l	z80.c	/^void op_sub_l(z80_t* state)$/;"	f
op_sub_nn	z80.c	/^void op_sub_nn(z80_t* state)$/;"	f
op_undefined	z80.c	/^void op_undefined(z80_t* state)$/;"	f
op_xor_a	z80.c	/^void op_xor_a(z80_t* state)$/;"	f
op_xor_b	z80.c	/^void op_xor_b(z80_t* state)$/;"	f
op_xor_c	z80.c	/^void op_xor_c(z80_t* state)$/;"	f
op_xor_d	z80.c	/^void op_xor_d(z80_t* state)$/;"	f
op_xor_e	z80.c	/^void op_xor_e(z80_t* state)$/;"	f
op_xor_h	z80.c	/^void op_xor_h(z80_t* state)$/;"	f
op_xor_hl	z80.c	/^void op_xor_hl(z80_t* state)$/;"	f
op_xor_l	z80.c	/^void op_xor_l(z80_t* state)$/;"	f
op_xor_nn	z80.c	/^void op_xor_nn(z80_t* state)$/;"	f
opcodes	z80.c	/^void *opcodes[256] = {$/;"	v
pc	z80.h	/^		uint16_t pc, sp;$/;"	m	struct:__anon7::Reg
prev	ut/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
print_state	z80.c	/^void print_state(z80_t* state)$/;"	f
process_file	main.c	/^void process_file(unsigned long fileLength)$/;"	f
process_opcode	main.c	/^void process_opcode(OpCodeType opcode)$/;"	f
ramBank	memory.h	/^	int ramBank;$/;"	m	struct:__anon1
ramOn	memory.h	/^	int ramOn;$/;"	m	struct:__anon1
read_byte	mmu.c	/^uint8_t read_byte(int addr)$/;"	f
read_memory_16	memory.c	/^uint16_t read_memory_16(gb_mem16_t* hash, int addr)$/;"	f
read_memory_8	memory.c	/^uint8_t read_memory_8(gb_mem8_t* hash, int addr)$/;"	f
read_word	mmu.c	/^uint16_t read_word(int addr)$/;"	f
reset	z80.c	/^void reset(z80_t* state)$/;"	f
rom	main.c	/^gb_mem8_t	*rom	= NULL;$/;"	v
romBank	memory.h	/^	int romBank;$/;"	m	struct:__anon1
rrs	z80.c	/^void rrs(z80_t* state)$/;"	f
rsv	z80.c	/^void rsv(z80_t* state)$/;"	f
run_loop	main.c	/^void run_loop()$/;"	f
sentinel	dbg.h	24;"	d
signature	ut/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
sp	z80.h	/^		uint16_t pc, sp;$/;"	m	struct:__anon7::Reg
state	main.c	/^z80_t 		*state;$/;"	v
step	gpu.c	/^void step()$/;"	f
stop	z80.h	/^	int stop;$/;"	m	struct:__anon7
sz	ut/utarray.h	/^    size_t sz;$/;"	m	struct:__anon4
t	z80.h	/^		int m, t;$/;"	m	struct:__anon7::Reg
t	z80.h	/^		int t;$/;"	m	struct:__anon7::Clock
tail	ut/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
tbl	ut/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
uint32_t	ut/uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint8_t	ut/uthash.h	/^typedef unsigned char uint8_t;$/;"	t
utarray_back	ut/utarray.h	215;"	d
utarray_clear	ut/utarray.h	195;"	d
utarray_concat	ut/utarray.h	172;"	d
utarray_done	ut/utarray.h	65;"	d
utarray_eltidx	ut/utarray.h	216;"	d
utarray_eltptr	ut/utarray.h	115;"	d
utarray_erase	ut/utarray.h	176;"	d
utarray_extend_back	ut/utarray.h	106;"	d
utarray_find	ut/utarray.h	211;"	d
utarray_free	ut/utarray.h	83;"	d
utarray_front	ut/utarray.h	213;"	d
utarray_init	ut/utarray.h	60;"	d
utarray_insert	ut/utarray.h	118;"	d
utarray_inserta	ut/utarray.h	130;"	d
utarray_len	ut/utarray.h	113;"	d
utarray_new	ut/utarray.h	78;"	d
utarray_next	ut/utarray.h	214;"	d
utarray_pop_back	ut/utarray.h	101;"	d
utarray_push_back	ut/utarray.h	95;"	d
utarray_renew	ut/utarray.h	190;"	d
utarray_reserve	ut/utarray.h	88;"	d
utarray_resize	ut/utarray.h	151;"	d
utarray_sort	ut/utarray.h	207;"	d
utarray_str_cpy	ut/utarray.h	/^static void utarray_str_cpy(void *dst, const void *src) {$/;"	f
utarray_str_dtor	ut/utarray.h	/^static void utarray_str_dtor(void *elt) {$/;"	f
uthash_expand_fyi	ut/uthash.h	74;"	d
uthash_fatal	ut/uthash.h	69;"	d
uthash_free	ut/uthash.h	71;"	d
uthash_malloc	ut/uthash.h	70;"	d
uthash_noexpand_fyi	ut/uthash.h	73;"	d
utstring_bincpy	ut/utstring.h	99;"	d
utstring_body	ut/utstring.h	117;"	d
utstring_clear	ut/utstring.h	93;"	d
utstring_concat	ut/utstring.h	107;"	d
utstring_done	ut/utstring.h	65;"	d
utstring_free	ut/utstring.h	71;"	d
utstring_init	ut/utstring.h	58;"	d
utstring_len	ut/utstring.h	115;"	d
utstring_new	ut/utstring.h	77;"	d
utstring_printf	ut/utstring.h	/^_UNUSED_ static void utstring_printf(UT_string *s, const char *fmt, ...) {$/;"	f
utstring_printf_va	ut/utstring.h	/^_UNUSED_ static void utstring_printf_va(UT_string *s, const char *fmt, va_list ap) {$/;"	f
utstring_renew	ut/utstring.h	84;"	d
utstring_reserve	ut/utstring.h	49;"	d
value	memory.h	/^	uint16_t value;$/;"	m	struct:__anon3
value	memory.h	/^	uint8_t value;$/;"	m	struct:__anon2
vram	main.c	/^gb_mem8_t	*vram	= NULL;$/;"	v
wram	main.c	/^gb_mem8_t	*wram	= NULL;$/;"	v
write_byte	mmu.c	/^void write_byte(int addr, uint8_t val)$/;"	f
write_word	mmu.c	/^void write_word(int addr, uint16_t val)$/;"	f
z80_t	z80.h	/^} z80_t;$/;"	t	typeref:struct:__anon7
zram	main.c	/^gb_mem8_t	*zram	= NULL;$/;"	v
